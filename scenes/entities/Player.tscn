[gd_scene load_steps=23 format=2]

[ext_resource path="res://assets/textures/entities/ass_man/spritesheet.png" type="Texture" id=1]
[ext_resource path="res://scripts/player/Player.gd" type="Script" id=2]
[ext_resource path="res://scripts/player/PlayerFSM.gd" type="Script" id=3]
[ext_resource path="res://assets/textures/entities/ass_man/light.png" type="Texture" id=4]
[ext_resource path="res://scenes/particles/StompParticles.tscn" type="PackedScene" id=6]
[ext_resource path="res://scripts/player/PlayerCameraJuice.gd" type="Script" id=7]
[ext_resource path="res://scenes/attacks/ShitBall.tscn" type="PackedScene" id=8]
[ext_resource path="res://assets/textures/entities/ass_man/half_ass_spritesheet.png" type="Texture" id=9]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode unshaded;
 
uniform float width : hint_range(0.0, 16.0);
uniform vec4 outline_color : hint_color;
 
void fragment()
{
    vec2 size = vec2(width) / vec2(textureSize(TEXTURE, 0));
   
    vec4 sprite_color = texture(TEXTURE, UV);
   
    float alpha = sprite_color.a;
    alpha += texture(TEXTURE, UV + vec2(0.0, -size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(size.x, -size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(size.x, 0.0)).a;
    alpha += texture(TEXTURE, UV + vec2(size.x, size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(0.0, size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(-size.x, size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(-size.x, 0.0)).a;
    alpha += texture(TEXTURE, UV + vec2(-size.x, -size.y)).a;
   
    vec3 final_color = mix(outline_color.rgb, sprite_color.rgb, sprite_color.a);
    COLOR = vec4(final_color, clamp(alpha, 0.0, 1.0));
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/width = 1.0
shader_param/outline_color = Color( 0, 0, 0, 1 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;
render_mode unshaded;
 
uniform float width : hint_range(0.0, 16.0);
uniform vec4 outline_color : hint_color;
 
void fragment()
{
    vec2 size = vec2(width) / vec2(textureSize(TEXTURE, 0));
   
    vec4 sprite_color = texture(TEXTURE, UV);
   
    float alpha = sprite_color.a;
    alpha += texture(TEXTURE, UV + vec2(0.0, -size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(size.x, -size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(size.x, 0.0)).a;
    alpha += texture(TEXTURE, UV + vec2(size.x, size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(0.0, size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(-size.x, size.y)).a;
    alpha += texture(TEXTURE, UV + vec2(-size.x, 0.0)).a;
    alpha += texture(TEXTURE, UV + vec2(-size.x, -size.y)).a;
   
    vec3 final_color = mix(outline_color.rgb, sprite_color.rgb, sprite_color.a);
    COLOR = vec4(final_color, clamp(alpha, 0.0, 1.0));
}"

[sub_resource type="ShaderMaterial" id=4]
render_priority = 1
shader = SubResource( 3 )
shader_param/width = 0.0
shader_param/outline_color = Color( 0, 0, 0, 1 )

[sub_resource type="CapsuleShape2D" id=5]
radius = 5.2141
height = 9.76912

[sub_resource type="Animation" id=6]
length = 0.8
tracks/0/type = "value"
tracks/0/path = NodePath("CharacterSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 18, 19, 20, 21, 22, 23, 24, 25 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HalfAss:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.8 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 8, 8 ]
}

[sub_resource type="Animation" id=7]
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath("CharacterSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 12, 13, 14 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HalfAss:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 1,
"values": [ 14, 15, 16 ]
}

[sub_resource type="Animation" id=8]
length = 0.2
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("CharacterSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HalfAss:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 1,
"values": [ 0 ]
}

[sub_resource type="Animation" id=9]
length = 0.4
tracks/0/type = "value"
tracks/0/path = NodePath("CharacterSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 8, 9, 10, 11 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HalfAss:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 10, 11, 12, 13 ]
}

[sub_resource type="Animation" id=10]
length = 2.0
tracks/0/type = "value"
tracks/0/path = NodePath("CharacterSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 27, 27 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HalfAss:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 18, 18 ]
}

[sub_resource type="Animation" id=11]
length = 0.3
tracks/0/type = "value"
tracks/0/path = NodePath("CharacterSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1, 1, 1 ),
"update": 1,
"values": [ 14, 15, 16, 17 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("StompParticles:emitting")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ false, true ]
}
tracks/2/type = "method"
tracks/2/path = NodePath("Camera")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0.2, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"values": [ {
"args": [ 0.3 ],
"method": "add_trauma"
}, {
"args": [ 0.3 ],
"method": "add_trauma"
} ]
}
tracks/3/type = "value"
tracks/3/path = NodePath("HalfAss:frame")
tracks/3/interp = 1
tracks/3/loop_wrap = true
tracks/3/imported = false
tracks/3/enabled = true
tracks/3/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 8, 8 ]
}

[sub_resource type="Animation" id=12]
tracks/0/type = "value"
tracks/0/path = NodePath("CharacterSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 26, 26 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("CharacterSprite:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Color( 100, 100, 100, 1 ), Color( 1, 1, 1, 1 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("HalfAss:frame")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 0.3 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ 8, 8 ]
}

[sub_resource type="Animation" id=13]
length = 0.6
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("CharacterSprite:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.3, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 1, 2, 3, 4, 5, 6 ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("HalfAss:frame")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2, 0.4, 0.5 ),
"transitions": PoolRealArray( 1, 1, 1, 1, 1 ),
"update": 1,
"values": [ 1, 2, 3, 3, 7 ]
}

[sub_resource type="OpenSimplexNoise" id=14]

[node name="Player" type="KinematicBody2D" groups=[
"Player",
]]
collision_mask = 2147483682
script = ExtResource( 2 )
bullet_type = ExtResource( 8 )

[node name="StateMachine" type="Node2D" parent="."]
script = ExtResource( 3 )

[node name="CharacterSprite" type="Sprite" parent="."]
material = SubResource( 2 )
texture = ExtResource( 1 )
hframes = 28
frame = 18

[node name="HalfAss" type="Sprite" parent="."]
light_mask = -2147483647
material = SubResource( 4 )
z_index = 1
texture = ExtResource( 9 )
hframes = 19
frame = 8

[node name="EnvironmentHitbox" type="CollisionShape2D" parent="."]
visible = false
position = Vector2( 0, 1.025 )
shape = SubResource( 5 )

[node name="BulletDetection" type="Area2D" parent="."]
visible = false
collision_mask = 24

[node name="BulletHitbox" type="CollisionShape2D" parent="BulletDetection"]
position = Vector2( 0, 1.025 )
shape = SubResource( 5 )

[node name="Animation" type="AnimationPlayer" parent="."]
anims/death = SubResource( 6 )
anims/fall = SubResource( 7 )
anims/idle = SubResource( 8 )
anims/jump = SubResource( 9 )
anims/recoil = SubResource( 10 )
anims/special_attack = SubResource( 11 )
anims/stunned = SubResource( 12 )
anims/walk = SubResource( 13 )

[node name="State" type="Label" parent="."]
visible = false
margin_left = -17.0
margin_top = -24.0
margin_right = 23.0
margin_bottom = -10.0
text = "state"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Camera" type="Camera2D" parent="."]
rotating = true
zoom = Vector2( 0.5, 0.5 )
smoothing_enabled = true
script = ExtResource( 7 )
noise = SubResource( 14 )
max_y = 60
max_r = 15

[node name="LightingEffects" type="Light2D" parent="."]
z_index = 2
texture = ExtResource( 4 )
energy = 1.2
mode = 2
shadow_enabled = true

[node name="StompParticles" parent="." instance=ExtResource( 6 )]
position = Vector2( 3, 11 )
lifetime = 2.0
speed_scale = 1.5
explosiveness = 1.0
emission_rect_extents = Vector2( 3, 0 )
flag_align_y = false
spread = 5.0
initial_velocity = 10.0
initial_velocity_random = 0.0

[node name="IfVisible" type="VisibilityNotifier2D" parent="."]
visible = false
position = Vector2( 0, -119 )

[node name="BulletPosition" type="Position2D" parent="."]
position = Vector2( -5, -3 )

[node name="ShootingParticlesPosition" type="Position2D" parent="."]
position = Vector2( -5, -3 )

[node name="BounceRaycasts" type="Node2D" parent="."]
visible = false

[node name="Raycast" type="RayCast2D" parent="BounceRaycasts"]
position = Vector2( 0, 11 )
enabled = true
cast_to = Vector2( 0, 4 )
collision_mask = 64
collide_with_areas = true

[node name="Raycast2" type="RayCast2D" parent="BounceRaycasts"]
position = Vector2( -2.043, 11 )
enabled = true
cast_to = Vector2( 0, 4 )
collision_mask = 64
collide_with_areas = true

[node name="Raycast3" type="RayCast2D" parent="BounceRaycasts"]
position = Vector2( 2.043, 11 )
enabled = true
cast_to = Vector2( 0, 4 )
collision_mask = 64
collide_with_areas = true

[node name="CoyoteTime" type="Timer" parent="."]
wait_time = 0.2
one_shot = true

[node name="JumpBuffer" type="Timer" parent="."]
wait_time = 0.1
one_shot = true
[connection signal="screen_entered" from="IfVisible" to="." method="_on_IfVisible_screen_entered"]
